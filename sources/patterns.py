import pytz

current_time_keywords = [
    'Time display',
    'Show time',
    'Current time',
    'Time now',
    "What's the time",
    'Time on screen',
    'Time on chatbot',
    'Clock display',
    'Present time',
    'Time information',
    'Display current time',
    'Time update',
    'Real-time clock',
    'Current timestamp',
    'Time showcase',
    'Time on interface',
    'Time on display',
    'Show me the time',
    'What time is it',
    'Time at the moment',
    'Current clock',
    'Time on the chatbot',
    'Time on the screen',
    'What is the time',
    'Time display request',
    'Time inquiry',
    'Time now inquiry',
    'Time check',
    'Current time request',
    'Time on the interface',
    'Time information request',
    'Time at this moment',
    'Time on the system',
    'Real-time time display',
    'Instant time update',
    'Time on my chatbot',
    'Time in the system',
    'Time representation',
    'Time showcasing',
    'What time do we have',
    'Time check request',
    'Time inquiry on chatbot',
    'Time info query',
    'Time at present',
    'Time request',
    'Current time on display',
    'Time display on the chatbot',
    'Time on the screen now',
    'Time on my interface',
    'Show the current time'
]

# Pattern for matching keywords for current time display
current_time_pattern = r'\b(?:{})\b'.format('|'.join(current_time_keywords))

current_date_keywords = [
    'Date display',
    'Show date',
    'Current date',
    'Date today',
    "What's the date",
    'Date on screen',
    'Date on chatbot',
    'Present date',
    'Date information',
    'Display current date',
    'Date update',
    'Real-time calendar',
    'Current datestamp',
    'Date showcase',
    'Date on interface',
    'Date on display',
    'Show me the date',
    'What date is it',
    'Date at the moment',
    'Current calendar',
    'Date on the chatbot',
    'Date on the screen',
    'What is the date',
    'Date display request',
    'Date inquiry',
    'Date today inquiry',
    'Date check',
    'Current date request',
    'Date on the interface',
    'Date information request',
    'Date at this moment',
    'Date on the system',
    'Real-time date display',
    'Instant date update',
    'Date on my chatbot',
    'Date in the system',
    'Date representation',
    'Date showcasing',
    'What date do we have',
    'Date check request',
    'Date inquiry on chatbot',
    'Date info query',
    'Date at present',
    'Date request',
    'Current date on display',
    'Date display on the chatbot',
    'Date on the screen now',
    'Date on my interface',
    'Show the current date'
]

# Pattern for matching keywords for current date display
current_date_pattern = r'\b(?:{})\b'.format('|'.join(current_date_keywords))

current_datetime_keywords = [
    'Date and time display',
    'Show date and time',
    'Current date and time',
    'Current datetime',
    "What's the date and time",
    'Date and time on screen',
    'Date and time on chatbot',
    'Clock and calendar display',
    'Present date and time',
    'Date and time information',
    'Display current date and time',
    'Date and time update',
    'Real-time clock and calendar',
    'Current timestamp',
    'Date and time showcase',
    'Date and time on interface',
    'Date and time on display',
    'Show me the date and time',
    'What is the date and time',
    'Current clock and calendar',
    'Date and time on the chatbot',
    'Date and time on the screen',
    'What is the current date and time',
    'Date and time display request',
    'Date and time inquiry',
    'Current date and time request',
    'Date and time check',
    'Date and time on the interface',
    'Date and time information request',
    'Date and time at this moment',
    'Date and time on the system',
    'Real-time date and time display',
    'Instant date and time update',
    'Date and time on my chatbot',
    'Date and time in the system',
    'Date and time representation',
    'Date and time showcasing',
    'What date and time do we have',
    'Date and time check request',
    'Date and time inquiry on chatbot',
    'Date and time info query',
    'Date and time at present',
    'Date and time request',
    'Current date and time on display',
    'Date and time display on the chatbot',
    'Date and time on the screen now',
    'Date and time on my interface',
    'Show the current date and time'
]

# Pattern for matching keywords for current date and time display
current_datetime_pattern = r'\b(?:{})\b'.format('|'.join(current_datetime_keywords))

calendar_keywords = [
    'Generate calendar',
    'Calendar generation',
    'Create calendar',
    'Calendar for specific date',
    'Calendar for given month',
    'Calendar display',
    'Show calendar',
    'Generate monthly calendar',
    'Calendar creation',
    'Specific date calendar',
    'Calendar for particular month',
    'Generate calendar for given date',
    'Calendar generation for specific date',
    'Calendar for specific month',
    'Calendar for specific year',
    'Calendar for specific day',
    'Calendar for specific time',
    'Create a calendar for',
    'Generate calendar for',
    'Calendar on specific date',
    'Calendar on specific month',
    'Calendar on specific year',
    'Calendar on specific day',
    'Calendar on specific time',
    'Calendar for specific period',
    'Generate monthly calendar for',
    'Calendar creation for',
    'Generate calendar on',
    'Create calendar for',
    'Show me a calendar for',
    'Generate a calendar on',
    'Create a calendar on',
    'Specific date calendar for',
    'Calendar for given month and year',
    'Calendar display for specific date',
    'Show calendar for specific month',
    'Generate monthly calendar for specific date',
    'Calendar generation for specific month',
    'Generate calendar for specific year',
    'Create a calendar for specific day',
    'Generate calendar for specific time',
    'Calendar creation for specific period',
    'Calendar on specific date and time',
    'Calendar on specific month and year',
    'Calendar on specific day of the week',
    'Calendar on specific time of the day',
    'Calendar for specific date range',
    'Generate monthly calendar for specific period'
]

# Pattern for matching keywords for generating a calendar
calendar_pattern = r'\b(?:{})\b'.format('|'.join(calendar_keywords))

joke_keywords = [
    'Tell me a joke',
    'Tell a funny joke',
    'Share a joke',
    'Give me a joke',
    'Joke time',
    'Make me laugh',
    'Crack a joke',
    'Funny joke',
    'Humorous joke',
    'Joke of the day',
    'One-liner joke',
    'Pun joke',
    'Knock-knock joke',
    'Dad joke',
    'Silly joke',
    'Cheesy joke',
    'Hilarious joke',
    'Laugh-inducing joke',
    'Comic joke',
    'Witty joke',
    'Amusing joke',
    'Entertaining joke',
    'Light-hearted joke',
    'Giggle-worthy joke',
    'Laugh-out-loud joke',
    'Humor-filled joke',
    'Joke for a good laugh',
    'Tell me something funny',
    'Crack me up',
    'Make me smile',
    'Jokester time',
    'Funny story',
    'Share a humorous joke',
    'Joke for amusement',
    'Tell a quick joke',
    'Brighten my day with a joke',
    'Make me burst into laughter',
    'Tickle my funny bone',
    'Entertain me with a joke',
    'Amuse me',
    'Tell me a hilarious joke',
    'Joke master time',
    'Funny punchline',
    'Share a witty joke',
    'Joke for entertainment',
    'Joke to lighten the mood',
    'Tell me a rib-tickling joke',
    'Crack a smile with a joke'
]

# Pattern for matching keywords for generating a joke
joke_pattern = r'\b(?:{})\b'.format('|'.join(joke_keywords))

weekday_keywords = [
    'Weekday of a date',
    'Day of the week',
    'What day is it',
    'Weekday inquiry',
    'Specific date inquiry',
    'Day of the week inquiry',
    'Date weekday',
    'Weekday check',
    'Check specific date',
    'Determine day of the week',
    'Day of the week of a date',
    'Inquire about specific date',
    'Find weekday of a date',
    'Weekday calculation',
    'What day falls on a date',
    'Weekday on a specific date',
    'Get the weekday of a date',
    'Day of the week of a specific date',
    'Find the day of the week',
    'Calculate weekday of a date',
    'Weekday information',
    'Specific date weekday inquiry',
    'Find out the day of the week',
    'Weekday determination',
    'Check the weekday of a date',
    'Day of the week for a specific date',
    'Find the weekday of a date',
    'Weekday of a given date',
    'Get the day of the week',
    'Weekday lookup',
    'Determine weekday of a date',
    'Find the day of the week for a date',
    'Weekday for a particular date',
    'Get the weekday for a specific date',
    'Find out what day of the week',
    'Weekday query',
    'Day of the week for a given date',
    'Find the day of the week of a date',
    'Weekday lookup for a specific date',
    'Get the day of the week for a date',
    'Weekday for a specific date inquiry',
    'What day does a date fall on',
    'Weekday calculation for a date',
    'Get the weekday for a particular date',
    'Find out the day of the week for a date',
    'Weekday determination for a specific date',
    'What is the weekday of a specific date'
]

# Pattern for matching keywords for determining the weekday of a specific date
weekday_pattern = r'\b(?:{})\b'.format('|'.join(weekday_keywords))

date_difference_keywords = [
    'Calculate date difference',
    'Difference between two dates',
    'Number of days between dates',
    'Days between two dates',
    'Date duration calculation',
    'Calculate days',
    'Count days between dates',
    'Find the difference in days',
    'Time difference calculation',
    'Compute date interval',
    'Date range calculation',
    'Days elapsed between dates',
    'Duration between two dates',
    'Find the number of days',
    'Calculate the period between dates',
    'Days count calculation',
    'Date offset calculation',
    'Calculate the time span',
    'Count the days between',
    'Interval between two dates',
    'Calculate the days elapsed',
    'Duration calculation',
    'Days between given dates',
    'Date comparison calculation',
    'Calculate the date gap',
    'Find the days between dates',
    'Compute the date difference',
    'Number of days calculation',
    'Days duration calculation',
    'Count the days',
    'Interval calculation',
    'Calculate the number of days',
    'Days between two given dates',
    'Calculate the date range',
    'Find the duration between dates',
    'Compute the days',
    'Time span calculation',
    'Days offset calculation',
    'Calculate the days count',
    'Date duration calculation between',
    'Calculate the days elapsed between',
    'Duration between two given dates',
    'Find the number of days between',
    'Calculate the period between',
    'Days count calculation between',
    'Date offset calculation between',
    'Calculate the time span between',
    'Calculate the days duration'
]

# Pattern for matching keywords for calculating the difference between two dates
date_difference_pattern = r'\b(?:{})\b'.format('|'.join(date_difference_keywords))

next_day_keywords = [
    'Next Monday',
    'Next Tuesday',
    'Next Wednesday',
    'Next Thursday',
    'Next Friday',
    'Next Saturday',
    'Next Sunday',
    'Upcoming Monday',
    'Upcoming Tuesday',
    'Upcoming Wednesday',
    'Upcoming Thursday',
    'Upcoming Friday',
    'Upcoming Saturday',
    'Upcoming Sunday',
    'When is the next Monday',
    'When is the next Tuesday',
    'When is the next Wednesday',
    'When is the next Thursday',
    'When is the next Friday',
    'When is the next Saturday',
    'When is the next Sunday',
    'Tell me the next Monday',
    'Tell me the next Tuesday',
    'Tell me the next Wednesday',
    'Tell me the next Thursday',
    'Tell me the next Friday',
    'Tell me the next Saturday',
    'Tell me the next Sunday',
    'What day is the next Monday',
    'What day is the next Tuesday',
    'What day is the next Wednesday',
    'What day is the next Thursday',
    'What day is the next Friday',
    'What day is the next Saturday',
    'What day is the next Sunday',
    'Next Monday date',
    'Next Tuesday date',
    'Next Wednesday date',
    'Next Thursday date',
    'Next Friday date',
    'Next Saturday date',
    'Next Sunday date',
    'Next Monday day of the week',
    'Next Tuesday day of the week',
    'Next Wednesday day of the week',
    'Next Thursday day of the week',
    'Next Friday day of the week',
    'Next Saturday day of the week',
    'Next Sunday day of the week'
]

# Pattern for matching keywords for finding the next occurrence of a specific day of the week
next_day_pattern = r'\b(?:{})\b'.format('|'.join(next_day_keywords))

days_until_keywords = [
    'Days until a date',
    'Count days till',
    'How many days are there until',
    'Number of days till',
    'Days remaining till',
    'Days left till',
    'Calculate days till',
    'Count down days till',
    'Find the days until',
    'Time until a date',
    'Calculate the number of days until',
    'Days between today and',
    'Calculate the remaining days until',
    'Number of days between today and',
    'Time remaining till',
    'Count the days until',
    'Calculate the days remaining until',
    'Number of days left till',
    'Days till a specific date',
    'Find the number of days until',
    'Calculate the days till',
    'Number of days between now and',
    'Count the remaining days until',
    'Calculate the days left till',
    'How many days until a specific date',
    'Time left till',
    'Count down the days until',
    'Calculate the time until',
    'Find the remaining days until',
    'Number of days from now until',
    'Count the days left till',
    'Calculate the time remaining till',
    'Days till a particular date',
    'Determine the days until',
    'Calculate the days between now and',
    'How many days are left until',
    'Count the days remaining until',
    'Calculate the days between today and',
    'Number of days until a specific date',
    'Calculate the time left till',
    'Days till a given date',
    'Find the days remaining until',
    'Calculate the days from now until',
    'How many days are there left until',
    'Count the days between today and',
    'Calculate the number of days from now until',
    'Days till a certain date',
    'Determine the number of days until',
    'Calculate the days between now and',
    'How many days are left till'
]

# Pattern for matching keywords for determining the number of days until a specific date
days_until_pattern = r'\b(?:{})\b'.format('|'.join(days_until_keywords))

timezone_keywords = [
    'time in',
    'current time in',
    'what is the time in',
    'time at',
    'time of',
    'timezone time',
    'timezone now',
    'current time for',
    'what time is it in',
    'time for',
    'time at',
    'time in a specific timezone',
    'time in a certain timezone'
]

# Pattern for matching keywords for retrieving the current time in a specific timezone
timezone_pattern = r'\b(?:{})\b'.format('|'.join(timezone_keywords))
# Pattern for matching keywords for retrieving the current time in a specific timezone
timezone_pattern2 = r'\b(?:{})\b'.format('|'.join(pytz.all_timezones))

week_keywords = [
    'week number',
    'current week',
    'current week number',
    'what week is it',
    'which week is it',
    'week of the year',
    'current week of the year',
    'week this year',
    'week this',
    'this week number',
    'current week no',
    'week no',
    'week at the moment',
    'week now',
    'current week count',
    'current week index',
    'week index',
    'week at present',
    'week at this time',
    'week at this moment',
    'week right now',
    'week of today',
    'week today',
    'current week position',
    'week position',
    'current week ranking',
    'week ranking',
    'week in progress',
    'current week status',
    'current week identifier',
    'week identifier',
    'current week order',
    'week order',
    'current week sequence',
    'week sequence',
    'current week placement',
    'week placement',
    'week during the year',
    'current week during the year',
    'current week within the year',
    'week within the year',
    'current week in the calendar',
    'week in the calendar',
    'current week of the calendar',
    'week of the calendar',
    'current week in the year',
    'week in the year',
    'current week in the date',
    'week in the date',
    'current week in the time',
    'week in the time'
]

# Pattern for matching keywords for retrieving the current week no
week_pattern = r'\b(?:{})\b'.format('|'.join(week_keywords))

leap_year_keywords = [
    'leap year',
    'is it a leap year',
    'is this a leap year',
    'is year a leap year',
    'is year leap',
    'is it leap',
    'is this leap',
    'is current year a leap year',
    'is current year leap',
    'is current year leap year',
    'is the year leap',
    'is the year a leap year',
    'check leap year',
    'verify leap year',
    'determine leap year',
    'is it a leap',
    'is this a leap',
    'is current year a leap',
    'is current year a leap year',
    'is the year a leap',
    'is the year leap',
    'is year divisible by 4',
    'is year divisible by 100',
    'is year divisible by 400',
    'year divisible by 4',
    'year divisible by 100',
    'year divisible by 400',
    'is year evenly divisible by 4',
    'is year evenly divisible by 100',
    'is year evenly divisible by 400',
    'check if it is a leap year',
    'check if this is a leap year',
    'check if year is a leap year',
    'is year a leap year or not',
    'is it a leap or not',
    'is this a leap or not',
    'is current year a leap or not',
    'is the year a leap or not',
    'is year divisible by 4 or not',
    'is year divisible by 100 or not',
    'is year divisible by 400 or not',
    'year divisible by 4 or not',
    'year divisible by 100 or not',
    'year divisible by 400 or not',
    'is year evenly divisible by 4 or not',
    'is year evenly divisible by 100 or not',
    'is year evenly divisible by 400 or not',
    'check if it is a leap or not',
    'check if this is a leap or not',
    'check if year is a leap or not'
]

leap_year_pattern = r'\b(?:{})\b'.format('|'.join(leap_year_keywords))

number_keywords = list(set([
    'number info',
    'information about number',
    'number details',
    'tell me about the number',
    'get details of number',
    'what can you tell me about the number',
    'number statistics',
    'number facts',
    'number properties',
    'number characteristics',
    'number analysis',
    'number description',
    'number attributes',
    'number profile',
    'number breakdown',
    'number overview',
    'number summary',
    'number insights',
    'number specifics',
    'number data',
    'number figures',
    'number report',
    'number record',
    'number background',
    'number history',
    'number significance',
    'number significance',
    'number significance',
    'number importance',
    'number relevance',
    'number usage',
    'number applications',
    'number examples',
    'number references',
    'number sources',
    'number origins',
]))

number_info_pattern = r'\b(?:{})\b'.format('|'.join(number_keywords))

even_numbers_keywords = [
    'even numbers',
    'all even numbers',
    'even integers',
    'all even integers',
    'even values',
    'all even values',
    'even digits',
    'all even digits',
    'even sequence',
    'even series',
    'even range',
    'even between',
    'even from',
    'even in',
    'even within',
    'even inclusive',
    'even numbers between',
    'all even numbers between',
    'even integers between',
    'all even integers between',
    'even values between',
    'all even values between',
    'even digits between',
    'all even digits between',
    'even sequence between',
    'even series between',
    'even range between',
    'even between numbers',
    'all even between numbers',
    'even integers between numbers',
    'all even integers between numbers',
    'even values between numbers',
    'all even values between numbers',
    'even digits between numbers',
    'all even digits between numbers',
    'even sequence between numbers',
    'even series between numbers',
    'even range between numbers',
]

even_numbers_pattern = r'\b(?:{})\b'.format('|'.join(even_numbers_keywords))

odd_numbers_keywords = [
    'odd numbers',
    'all odd numbers',
    'odd integers',
    'all odd integers',
    'odd values',
    'all odd values',
    'odd digits',
    'all odd digits',
    'odd sequence',
    'odd series',
    'odd range',
    'odd between',
    'odd from',
    'odd in',
    'odd within',
    'odd inclusive',
    'odd numbers between',
    'all odd numbers between',
    'odd integers between',
    'all odd integers between',
    'odd values between',
    'all odd values between',
    'odd digits between',
    'all odd digits between',
    'odd sequence between',
    'odd series between',
    'odd range between',
    'odd between numbers',
    'all odd between numbers',
    'odd integers between numbers',
    'all odd integers between numbers',
    'odd values between numbers',
    'all odd values between numbers',
    'odd digits between numbers',
    'all odd digits between numbers',
    'odd sequence between numbers',
    'odd series between numbers',
    'odd range between numbers',
]

odd_numbers_pattern = r'\b(?:{})\b'.format('|'.join(odd_numbers_keywords))

prime_numbers_keywords = [
    'prime numbers',
    'all prime numbers',
    'prime integers',
    'all prime integers',
    'prime values',
    'all prime values',
    'prime digits',
    'all prime digits',
    'prime sequence',
    'prime series',
    'prime range',
    'prime between',
    'prime from',
    'prime in',
    'prime within',
    'prime inclusive',
    'prime numbers between',
    'all prime numbers between',
    'prime integers between',
    'all prime integers between',
    'prime values between',
    'all prime values between',
    'prime digits between',
    'all prime digits between',
    'prime sequence between',
    'prime series between',
    'prime range between',
    'prime between numbers',
    'all prime between numbers',
    'prime integers between numbers',
    'all prime integers between numbers',
    'prime values between numbers',
    'all prime values between numbers',
    'prime digits between numbers',
    'all prime digits between numbers',
    'prime sequence between numbers',
    'prime series between numbers',
    'prime range between numbers',
]

prime_numbers_pattern = r'\b(?:{})\b'.format('|'.join(prime_numbers_keywords))

fibonacci_numbers_keywords = [
    'fibonacci numbers',
    'all fibonacci numbers',
    'fibonacci sequence',
    'fibonacci series',
    'fibonacci values',
    'fibonacci digits',
    'fibonacci terms',
    'fibonacci elements',
    'fibonacci array',
    'fibonacci list',
    'fibonacci set',
    'fibonacci range',
    'fibonacci up to',
    'fibonacci until',
    'fibonacci below',
    'fibonacci under',
    'fibonacci above',
    'fibonacci beyond',
    'fibonacci within',
    'fibonacci inclusive',
    'fibonacci less than',
    'fibonacci greater than',
    'fibonacci smaller than',
    'fibonacci larger than',
    'fibonacci until limit',
    'fibonacci up to limit',
    'fibonacci below limit',
    'fibonacci under limit',
    'fibonacci above limit',
    'fibonacci beyond limit',
    'fibonacci within limit',
    'fibonacci inclusive limit',
    'fibonacci less than limit',
    'fibonacci greater than limit',
    'fibonacci smaller than limit',
    'fibonacci larger than limit',
    'fibonacci until number',
    'fibonacci up to number',
    'fibonacci below number',
    'fibonacci under number',
    'fibonacci above number',
    'fibonacci beyond number',
    'fibonacci within number',
    'fibonacci inclusive number',
    'fibonacci less than number',
    'fibonacci greater than number',
    'fibonacci smaller than number',
    'fibonacci larger than number',
    'fibonacci until value',
    'fibonacci up to value',
    'fibonacci below value',
    'fibonacci under value',
    'fibonacci above value',
    'fibonacci beyond value',
    'fibonacci within value',
    'fibonacci inclusive value',
    'fibonacci less than value',
    'fibonacci greater than value',
    'fibonacci smaller than value',
    'fibonacci larger than value',
]

fibonacci_numbers_pattern = r'\b(?:{})\b'.format('|'.join(fibonacci_numbers_keywords))

math_table_keywords = [
    'generate math table',
    'create math table',
    'make math table',
    'math table for',
    'multiplication table for',
    'table of',
    'math facts for',
    'times table for',
    'math chart for',
    'table for number',
    'table for the number',
    'table of number',
    'table of the number',
    'math table for number',
    'math table for the number',
    'math multiplication table for',
    'multiplication table of',
    'math facts of',
    'times table of',
    'math chart of',
    'table of multiplication for',
    'table of multiplication of',
    'math table for number 5',
    'math table for the number 5',
    'math multiplication table for 5',
    'multiplication table of 5',
    'math facts of 5',
    'times table of 5',
    'math chart of 5',
    'table of multiplication for 5',
    'table of multiplication of 5',
    'math table for 5',
]

math_table_pattern = r'\b(?:{})\b'.format('|'.join(math_table_keywords))

dice_keywords = [
    'roll dice',
    'roll a dice',
    'throw dice',
    'throw a dice',
    'dice roll',
    'dice throw',
    'get random number from dice',
    'get a random number from dice',
    'generate random number from dice',
    'generate a random number from dice',
    'random number from dice',
    'random number of dice',
    'random dice number',
    'dice random number',
    'dice result',
    'dice outcome',
    'dice value',
    'dice roll result',
    'dice roll outcome',
    'dice roll value',
    'random number from a die',
    'random number of a die',
    'random die number',
    'die random number',
    'die result',
    'die outcome',
    'die value',
    'die roll result',
    'die roll outcome',
    'die roll value',
    'roll dice once',
    'roll a dice once',
    'throw dice once',
    'throw a dice once',
    'roll single dice',
    'roll a single dice',
    'throw single dice',
    'throw a single dice',
    'roll one dice',
    'throw one dice',
    'roll a die',
    'throw a die',
    'get random number from a die',
    'get a random number from a die',
    'generate random number from a die',
    'generate a random number from a die',
    'random number from a die',
    'random die number',
    'die random number',
    'die result',
    'die outcome',
    'die value',
    'die roll result',
    'die roll outcome',
    'die roll value',
]

dice_pattern = r'\b(?:{})\b'.format('|'.join(dice_keywords))
random_card_keywords = [
    'random card',
    'pick a card',
    'choose a card',
    'select a card',
    'get a card',
    'draw a card',
    'random playing card',
    'pick a playing card',
    'choose a playing card',
    'select a playing card',
    'get a playing card',
    'draw a playing card',
    'random playing card from deck',
    'pick a playing card from deck',
    'choose a playing card from deck',
    'select a playing card from deck',
    'get a playing card from deck',
    'draw a playing card from deck',
    'random card from deck',
    'pick a card from deck',
    'choose a card from deck',
    'select a card from deck',
    'get a card from deck',
    'draw a card from deck',
    'pick a random card',
    'choose a random card',
    'select a random card',
    'get a random card',
    'draw a random card',
    'pick a random playing card',
    'choose a random playing card',
    'select a random playing card',
    'get a random playing card',
    'draw a random playing card',
    'pick a random playing card from deck',
    'choose a random playing card from deck',
    'select a random playing card from deck',
    'get a random playing card from deck',
    'draw a random playing card from deck',
    'pick a random card from deck',
    'choose a random card from deck',
    'select a random card from deck',
    'get a random card from deck',
    'draw a random card from deck',
    'get a random card from a deck of cards',
    'pick a random card from a deck of cards',
    'choose a random card from a deck of cards',
    'select a random card from a deck of cards',
    'draw a random card from a deck of cards',
]

deck_of_patterns =  r'\b(?:{})\b'.format('|'.join(random_card_keywords))

correction_keywords = [
    'correct',
    'fix',
    'revise',
    'edit',
    'rectify',
    'amend',
    'repair',
    'adjust',
    'modify',
    'improve',
    'rewrite',
    'refine',
    'redress',
    'remedy',
    'emend',
    'revamp',
    'mend',
    'rephrase',
    'reword',
    'rework',
    'rescript',
    'reformulate',
    'rectify this',
    'fix this',
    'revise this',
    'edit this',
    'rectify the text',
    'fix the text',
    'revise the text',
    'edit the text',
    'correct this sentence',
    'fix this sentence',
    'revise this sentence',
    'edit this sentence',
    'correct the sentence',
    'fix the sentence',
    'revise the sentence',
    'edit the sentence',
    'correct the following',
    'fix the following',
    'revise the following',
    'edit the following',
    'correction needed',
    'text correction',
    'sentence correction',
    'correct my text',
    'fix my text',
    'revise my text',
    'edit my text',
    'correction required',
    'text correction needed',
]

correction_patterne = r'\b(?:{})\b'.format('|'.join(correction_keywords))

dice_keywords = [
    'roll a dice',
    'roll the dice',
    'roll dice',
    'throw a dice',
    'throw the dice',
    'throw dice',
    'toss a dice',
    'toss the dice',
    'toss dice',
    'get a random number from a dice',
    'get a random number from dice',
    'get a random number from the dice',
    'generate a random number from a dice',
    'generate a random number from dice',
    'generate a random number from the dice',
    'random dice number',
    'random number from dice',
    'dice roll',
    'dice throw',
    'dice toss',
    'dice game',
    'dice gambling',
    'dice outcome',
    'dice result',
    'dice value',
    'dice face',
    'dice sides',
    'dice numbers',
    'dice simulation',
    'dice probability',
    'dice statistics',
    'dice roll simulation',
    'dice roll probability',
    'dice roll statistics',
    'dice roll outcome',
    'dice throw simulation',
    'dice throw probability',
    'dice throw statistics',
    'dice throw outcome',
    'dice toss simulation',
    'dice toss probability',
    'dice toss statistics',
    'dice toss outcome',
    'random dice roll',
    'random dice throw',
    'random dice toss',
    'randomize dice',
    'randomize dice roll',
    'randomize dice throw',
    'randomize dice toss',
]

toss_keywords = [
    'coin toss',
    'coin flip',
    'flip a coin',
    'flip the coin',
    'toss a coin',
    'toss the coin',
    'coin flipping',
    'coin tossing',
    'flip coin',
    'toss coin',
    'coin toss game',
    'coin flip outcome',
    'coin toss result',
    'coin flip simulation',
    'coin toss simulation',
    'coin flip probability',
    'coin toss probability',
    'random coin toss',
    'random coin flip',
    'generate a random coin toss',
    'generate a random coin flip',
    'get a random coin toss',
    'get a random coin flip',
    'coin side',
    'coin face',
    'coin outcome',
    'coin result',
    'coin flipper',
    'coin tosser',
    'coin tosser',
    'coin flipper',
    'coin flipper',
    'coin tosser',
    'coin tosser',
    'coin flipper',
    'coin flip value',
    'coin toss value',
    'coin flip statistics',
    'coin toss statistics',
    'coin flip game',
    'coin toss game',
    'coin flipping game',
    'coin tossing game',
    'randomize coin toss',
    'randomize coin flip',
    'randomize coin outcome',
]

toss_pattern =  r'\b(?:{})\b'.format('|'.join(toss_keywords))

sentiment_analysis_keywords = [
    'sentiment analysis',
    'analyze sentiment',
    'sentiment classification',
    'sentiment scoring',
    'sentiment evaluation',
    'sentiment detection',
    'emotion analysis',
    'tone analysis',
    'opinion mining',
    'subjectivity analysis',
    'text sentiment',
    'sentiment extraction',
    'sentiment assessment',
    'sentiment interpretation',
    'sentiment understanding',
    'sentiment prediction',
]

sentiment_pattern =  r'\b(?:{})\b'.format('|'.join(sentiment_analysis_keywords))

text_description_keywords = [
    'text description',
    'describe text',
    'text summarization',
    'summarize text',
    'text explanation',
    'explain text',
    'text interpretation',
    'interpret text',
    'text details',
    'text overview',
    'text analysis',
    'analyze text',
    'text breakdown',
    'break down text',
    'text understanding',
    'understand text',
    'text insights',
    'text context',
    'text representation',
    'text depiction',
    'text portrayal',
    'text narrative',
    'text depiction',
    'text characterization',
    'text profiling',
    'text visualization',
    'text outline',
    'text structure',
    'text composition',
]

text_des_pattern =  r'\b(?:{})\b'.format('|'.join(text_description_keywords))

name_age_keywords = [
    'name meaning',
    'meaning of a name',
    'find name meaning',
    'name significance',
    'name interpretation',
    'name definition',
    'name origin',
    'name etymology',
    'name history',
    'name analysis',
    'name symbolism',
    'name explanation',
    'name understanding',
    'name origins',
    
]

name_age_pattern =  r'\b(?:{})\b'.format('|'.join(name_age_keywords))

translate_keywords = [
    'translate',
    'translation',
    'translate language',
    'language translation',
    'translate text',
    'text translation',
    'translate to',
    'translate from',
    'translate into',
    'translate document',
    'translate sentence',
    'translate phrase',
    'translate words',
    'translate word',
    'translate paragraph',
    'language converter',
    'language interpreter',
    'language translater',
]

translate_pattern = r'\b(?:{})\b'.format('|'.join(translate_keywords))
